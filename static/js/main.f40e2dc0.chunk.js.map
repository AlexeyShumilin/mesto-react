{"version":3,"sources":["images/logo.svg","components/Header.js","utils/Api.js","components/Card.js","images/avatar.jpg","images/avatar-edit.svg","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","components/Footer.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","alt","src","mestologo","api","options","this","_headers","headers","_baseUrl","baseUrl","url","param","fetch","then","res","ok","json","Promise","reject","status","statusText","data","_getResponseData","method","body","JSON","stringify","name","about","obj","avatar","cardInfo","link","cardId","authorization","Card","element","onImageClick","type","onClick","aria-label","Main","props","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","all","getProfileInfo","getInitialCards","profile","places","catch","error","console","log","avatarEdit","onEditAvatar","onEditProfile","onAddPlace","map","card","onCardClick","_id","PopupWithForm","title","onClose","textOnButton","children","isOpen","ImagePopup","Footer","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isConfirmPopupOpen","setConfirmPopupOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","closeAllPopups","id","required","placeholder","minLength","maxLength","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAAe,MAA0B,iCCW1BA,EARA,WACb,OACE,wBAAQC,UAAU,SAAlB,SACE,qBAAKC,IAAI,4EAAgBD,UAAU,eAAeE,IAAKC,O,cCqFhDC,EAAM,I,WA1FjB,WAAYC,GAAU,oBACpBC,KAAKC,SAAWF,EAAQG,QACxBF,KAAKG,SAAWJ,EAAQK,Q,6DAGTC,EAAKC,GACpB,OAAOC,MAAMF,EAAKC,GAAOE,MAAK,SAACC,GAC7B,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAR,gGACcJ,EAAIK,OADlB,cAC8BL,EAAIM,kB,sCAM7BC,GACd,OAAOhB,KAAKiB,iBAAL,UAAyBjB,KAAKG,SAA9B,aAAmD,CACxDe,OAAQ,QACRhB,QAASF,KAAKC,SACdkB,KAAMC,KAAKC,UAAU,CACnBC,KAAMN,EAAKM,KACXC,MAAOP,EAAKO,Y,uCAOhB,OAAOvB,KAAKiB,iBAAL,UAAyBjB,KAAKG,SAA9B,aAAmD,CACxDD,QAASF,KAAKC,a,iCAKPuB,GACT,OAAOxB,KAAKiB,iBAAL,UAAyBjB,KAAKG,SAA9B,oBAA0D,CAC/De,OAAQ,QACRhB,QAASF,KAAKC,SACdkB,KAAMC,KAAKC,UAAU,CACnBI,OAAQD,Q,oCAMAE,GACZ,OAAO1B,KAAKiB,iBAAL,UAAyBjB,KAAKG,SAA9B,UAAgD,CACrDe,OAAQ,OACRhB,QAASF,KAAKC,SACdkB,KAAMC,KAAKC,UAAU,CACnBC,KAAMI,EAASJ,KACfK,KAAMD,EAASC,W,iCAMVC,GACT,OAAO5B,KAAKiB,iBAAL,UAAyBjB,KAAKG,SAA9B,kBAAgDyB,GAAU,CAC/DV,OAAQ,SACRhB,QAASF,KAAKC,a,8BAKV2B,GACN,OAAO5B,KAAKiB,iBAAL,UAAyBjB,KAAKG,SAA9B,wBAAsDyB,GAAU,CACrEV,OAAQ,MACRhB,QAASF,KAAKC,a,iCAKP2B,GACT,OAAO5B,KAAKiB,iBAAL,UAAyBjB,KAAKG,SAA9B,wBAAsDyB,GAAU,CACrEV,OAAQ,SACRhB,QAASF,KAAKC,a,wCAMhB,OAAOD,KAAKiB,iBAAL,UAAyBjB,KAAKG,SAA9B,UAAgD,CACrDD,QAASF,KAAKC,e,KAKD,CAAQ,CACzBG,QAAS,8CACTF,QAAS,CACP2B,cAAe,uCACf,eAAgB,sBCpELC,MAzBf,YAA0C,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,aAKvB,OACE,qCACE,wBAAQtC,UAAU,uBAAuBuC,KAAK,WAC9C,qBACEvC,UAAU,iBACVE,IAAKmC,EAAQJ,KACbhC,IAAKoC,EAAQT,KACbY,QAXN,WACEF,EAAaD,MAYX,sBAAKrC,UAAU,uBAAf,UACE,mBAAGA,UAAU,iBAAb,SAA+BqC,EAAQT,OACvC,sBAAK5B,UAAU,OAAf,UACE,wBAAQA,UAAU,gBAAgByC,aAAW,2BAAOF,KAAK,WACzD,mBAAGvC,UAAU,mCCpBR,MAA0B,mCCA1B,MAA0B,wCCoE1B0C,MA9Df,SAAcC,GAAQ,IAAD,EACaC,IAAMC,SAAS,IAD5B,mBACZC,EADY,KACFC,EADE,OAE2BH,IAAMC,SAAS,IAF1C,mBAEZG,EAFY,KAEKC,EAFL,OAGiBL,IAAMC,SAASd,GAHhC,mBAGZmB,EAHY,KAGAC,EAHA,OAIOP,IAAMC,SAAS,IAJtB,mBAIZO,EAJY,KAILC,EAJK,KAmBnB,OAbAT,IAAMU,WAAU,WACdpC,QAAQqC,IAAI,CAACnD,EAAIoD,iBAAkBpD,EAAIqD,oBACpC3C,MAAK,YAAwB,IAAD,mBAArB4C,EAAqB,KAAZC,EAAY,KAC3BR,EAAcO,EAAQ3B,QACtBgB,EAAYW,EAAQ9B,MACpBqB,EAAmBS,EAAQ7B,OAC3BwB,EAASM,MAEVC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,IAGD,iCACE,sBAAK7D,UAAU,wBAAf,UACE,qBAAKA,UAAU,kBAAkBE,IAAKgD,EAAYjD,IAAI,yCACtD,qBACED,UAAU,gBACVE,IAAK8D,EACL/D,IAAI,aACJuC,QAASG,EAAMsB,eAEjB,sBAAKjE,UAAU,YAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiC8C,IACjC,wBACE9C,UAAU,iCACVuC,KAAK,SACLE,aAAW,4HACXD,QAASG,EAAMuB,mBAGnB,mBAAGlE,UAAU,mBAAb,SAAiCgD,OAEnC,wBACEhD,UAAU,+BACVuC,KAAK,SACLE,aAAW,8FACXD,QAASG,EAAMwB,mBAKrB,yBAASnE,UAAU,WAAnB,SACGoD,EAAMgB,KAAI,SAACC,GAAD,OACT,qBAAKrE,UAAU,UAAf,SACE,cAAC,EAAD,CAAMqC,QAASgC,EAAM/B,aAAcK,EAAM2B,eADbD,EAAKE,cCnC9BC,MAtBf,YAOI,IANF5C,EAMC,EANDA,KACA6C,EAKC,EALDA,MACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,aACAC,EAEC,EAFDA,SACAC,EACC,EADDA,OAEA,OACE,qBAAK7E,UAAS,sBAAiB4B,EAAjB,YAAyBiD,EAAS,kBAAoB,IAApE,SACE,uBAAM7E,UAAU,mBAAhB,UACE,wBAAQuC,KAAK,SAASvC,UAAU,eAAewC,QAASkC,IACxD,oBAAI1E,UAAU,eAAd,SAA8ByE,IAC7BG,EACD,wBAAQ5E,UAAU,cAAcuC,KAAK,SAArC,SACGoC,UCCIG,MAhBf,YAAgD,IAA1BJ,EAAyB,EAAzBA,QAASG,EAAgB,EAAhBA,OAAQR,EAAQ,EAARA,KACrC,OACE,qBAAKrE,UAAS,0BAAqB6E,GAAU,uBAA7C,SACE,sBAAK7E,UAAU,qBAAf,UACE,wBAAQA,UAAU,eAAewC,QAASkC,IAC1C,qBACE1E,UAAU,mBACVE,IAAKmE,GAAQA,EAAKpC,KAClBhC,IAAKoE,GAAQA,EAAKzC,OAEpB,mBAAG5B,UAAU,qBAAb,SAAmCqE,GAAQA,EAAKzC,aCFzCmD,EARA,WACb,OACE,wBAAQ/E,UAAU,sBAAlB,SACE,mBAAGA,UAAU,gBAAb,uCCgJSgF,MA7If,WAAe,MAE6CpC,IAAMC,UAC9D,GAHW,mBAENoC,EAFM,KAEkBC,EAFlB,OAKuCtC,IAAMC,UAAS,GALtD,mBAKNsC,EALM,KAKeC,EALf,OAM2CxC,IAAMC,UAAS,GAN1D,mBAMNwC,EANM,KAMiBC,EANjB,OAOqC1C,IAAMC,UAAS,GAPpD,mBAON0C,EAPM,KAOcC,EAPd,OAQmC5C,IAAMC,UAAS,GARlD,mBAQN4C,EARM,KAQYC,EARZ,OAS2B9C,IAAMC,SAAS,MAT1C,mBASN8C,EATM,KASQC,EATR,KAyBPC,EAAiB,WACrBX,GAAwB,GACxBE,GAAqB,GACrBM,GAAoB,GACpBJ,GAAuB,GACvBE,GAAoB,GACpBI,EAAgB,OAQlB,OACE,sBAAK5F,UAAU,OAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEkE,cA9ByB,WAC7BgB,GAAwB,IA8BpBf,WA3BsB,WAC1BiB,GAAqB,IA2BjBnB,aAxBwB,WAC5BqB,GAAuB,IAwBnBhB,YAZkB,SAAUD,GAChCqB,GAAoB,GACpBE,EAAgBvB,MAYd,cAAC,EAAD,IACA,cAAC,EAAD,CACEI,MAAO,4HACP7C,KAAM,UACNgD,SACE,qCACE,uBACEkB,GAAG,eACH9F,UAAU,cACVuC,KAAK,OACLwD,UAAQ,EACRC,YAAY,gEACZpE,KAAK,OACLqE,UAAW,IACXC,UAAW,OAEb,uBACEJ,GAAG,cACH9F,UAAU,cACVuC,KAAK,OACLwD,UAAQ,EACRC,YAAY,+FACZpE,KAAK,QACLqE,UAAW,IACXC,UAAW,WAIjBrB,OAAQI,EACRP,QAASmB,EACTlB,aAAc,2DAEhB,cAAC,EAAD,CACEF,MAAO,gEACP7C,KAAM,WACNgD,SACE,qCACE,uBACEkB,GAAG,aACH9F,UAAU,cACVuC,KAAK,OACLwD,UAAQ,EACRC,YAAY,mDACZpE,KAAK,OACLqE,UAAW,IACXC,UAAW,OAEb,uBACEJ,GAAG,aACH9F,UAAU,cACVuC,KAAK,MACLwD,UAAQ,EACRC,YAAY,qGACZpE,KAAK,YAIXiD,OAAQM,EACRT,QAASmB,EACTlB,aAAc,+CAEhB,cAAC,EAAD,CACEF,MAAO,wFACP7C,KAAM,gBACNgD,SACE,uBACEkB,GAAG,eACH9F,UAAU,cACVuC,KAAK,MACLyD,YAAY,yFACZpE,KAAK,WAGTiD,OAAQQ,EACRX,QAASmB,EACTlB,aAAc,2DAEhB,cAAC,EAAD,CACEN,KAAMsB,EACNd,OAAQY,EACRf,QAASmB,IAEX,cAAC,EAAD,CACEpB,MAAO,0DACP7C,KAAM,UACNiD,OAAQU,EACRb,QAASmB,EACTlB,aAAc,qBCnIPwB,EAZS,SAAAC,GAChBA,GAAeA,aAAuBC,UACtC,6BAAqBvF,MAAK,YAAgD,IAA9CwF,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QACxDJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDpBO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5BZ,K","file":"static/js/main.f40e2dc0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.fb123762.svg\";","import React from \"react\";\nimport mestologo from \"../images/logo.svg\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <img alt=\"логотип Место\" className=\"header__logo\" src={mestologo} />\n    </header>\n  );\n};\n\nexport default Header;\n","class Api {\n  constructor(options) {\n    this._headers = options.headers; //Передаем заголовок\n    this._baseUrl = options.baseUrl; //Передаем базовый URL\n  }\n\n  _getResponseData(url, param) {\n    return fetch(url, param).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(\n        `Произошла шибка ${res.status} - ${res.statusText}`\n      );\n    });\n  }\n\n  //редактирование профиля\n  editProfileInfo(data) {\n    return this._getResponseData(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    });\n  }\n\n  //запрос данных профиля\n  getProfileInfo() {\n    return this._getResponseData(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    });\n  }\n\n  //редактирование аватара\n  editAvatar(obj) {\n    return this._getResponseData(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: obj,\n      }),\n    });\n  }\n\n  //отправка данных о новой карточке\n  createNewCard(cardInfo) {\n    return this._getResponseData(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: cardInfo.name,\n        link: cardInfo.link,\n      }),\n    });\n  }\n\n  //удаление карточки\n  deleteCard(cardId) {\n    return this._getResponseData(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    });\n  }\n\n  //ставим лайк\n  setLike(cardId) {\n    return this._getResponseData(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this._headers,\n    });\n  }\n\n  //удаляем лайк\n  removeLike(cardId) {\n    return this._getResponseData(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    });\n  }\n\n  //запрос массива карточек\n  getInitialCards() {\n    return this._getResponseData(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    });\n  }\n}\n\nexport const api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-16\",\n  headers: {\n    authorization: \"27419946-4fff-4784-a16e-1161591c67a2\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n","import React from \"react\";\n\nfunction Card({ element, onImageClick }) {\n  function handleClick() {\n    onImageClick(element);\n  }\n\n  return (\n    <>\n      <button className=\"element__delete-icon\" type=\"button\" />\n      <img\n        className=\"element__image\"\n        src={element.link}\n        alt={element.name}\n        onClick={handleClick}\n      />\n      <div className=\"element__information\">\n        <p className=\"element__title\">{element.name}</p>\n        <div className=\"like\">\n          <button className=\"element__like\" aria-label=\"Лайк\" type=\"button\" />\n          <p className=\"element__like-number\" />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/avatar.6666407a.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-edit.165d742a.svg\";","import React from \"react\";\nimport { api } from \"../utils/Api\";\nimport Card from \"./Card.js\";\nimport avatar from \"./../images/avatar.jpg\";\nimport avatarEdit from \"./../images/avatar-edit.svg\";\n\nfunction Main(props) {\n  const [userName, setUserName] = React.useState(\"\");\n  const [userDescription, setUserDescription] = React.useState(\"\");\n  const [userAvatar, setUserAvatar] = React.useState(avatar);\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    Promise.all([api.getProfileInfo(), api.getInitialCards()])\n      .then(([profile, places]) => {\n        setUserAvatar(profile.avatar);\n        setUserName(profile.name);\n        setUserDescription(profile.about);\n        setCards(places);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <main>\n      <div className=\"profile page__profile\">\n        <img className=\"profile__avatar\" src={userAvatar} alt=\"аватар\" />\n        <img\n          className=\"profile__edit\"\n          src={avatarEdit}\n          alt=\"avatarEdit\"\n          onClick={props.onEditAvatar}\n        />\n        <div className=\"user-info\">\n          <div className=\"user-info__data\">\n            <div className=\"user-info__name-data\">\n              <h1 className=\"user-info__name\">{userName}</h1>\n              <button\n                className=\" button user-info__edit-button\"\n                type=\"button\"\n                aria-label=\"Редактировать профиль\"\n                onClick={props.onEditProfile}\n              />\n            </div>\n            <p className=\"user-info__about\">{userDescription}</p>\n          </div>\n          <button\n            className=\"button user-info__add-button\"\n            type=\"button\"\n            aria-label=\"Добавить элемент\"\n            onClick={props.onAddPlace}\n          />\n        </div>\n      </div>\n\n      <section className=\"elements\">\n        {cards.map((card) => (\n          <div className=\"element\" key={card._id}>\n            <Card element={card} onImageClick={props.onCardClick} />\n          </div>\n        ))}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\n\nfunction PopupWithForm({\n  name,\n  title,\n  onClose,\n  textOnButton,\n  children,\n  isOpen,\n}) {\n  return (\n    <div className={`popup popup-${name} ${isOpen ? \"popup_is-opened\" : \"\"}`}>\n      <form className=\"popup__container\">\n        <button type=\"button\" className=\"popup__close\" onClick={onClose} />\n        <h2 className=\"popup__title\">{title}</h2>\n        {children}\n        <button className=\"popup__save\" type=\"submit\">\n          {textOnButton}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default PopupWithForm;\n","import React from \"react\";\n\nfunction ImagePopup({ onClose, isOpen, card }) {\n  return (\n    <div className={`popup img-popup ${isOpen && \"img-popup_is-opened\"}`}>\n      <div className=\"img-popup__content\">\n        <button className=\"popup__close\" onClick={onClose} />\n        <img\n          className=\"img-popup__place\"\n          src={card && card.link}\n          alt={card && card.name}\n        />\n        <p className=\"img-popup__caption\">{card && card.name}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer page__footer\">\n      <p className=\"footer__title\">© 2020 Mesto Russia</p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport \"../index.css\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport Footer from \"./Footer\";\n\nfunction App() {\n  //стейты попапов\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(\n    false\n  );\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isConfirmPopupOpen, setConfirmPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n\n  //setstate block\n\n  const handleEditProfileClick = function () {\n    setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = function () {\n    setAddPlacePopupOpen(true);\n  };\n\n  const handleEditAvatarClick = function () {\n    setEditAvatarPopupOpen(true);\n  };\n\n  const closeAllPopups = function () {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setConfirmPopupOpen(false);\n    setSelectedCard(null);\n  };\n\n  const handleCardClick = function (card) {\n    setIsImagePopupOpen(true);\n    setSelectedCard(card);\n  };\n\n  return (\n    <div className=\"page\">\n      <Header />\n      <Main\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onEditAvatar={handleEditAvatarClick}\n        onCardClick={handleCardClick}\n      />\n      <Footer />\n      <PopupWithForm\n        title={\"Редактировать профиль\"}\n        name={\"profile\"}\n        children={\n          <>\n            <input\n              id=\"author-input\"\n              className=\"popup__item\"\n              type=\"text\"\n              required\n              placeholder=\"Введите имя\"\n              name=\"name\"\n              minLength={\"2\"}\n              maxLength={\"40\"}\n            />\n            <input\n              id=\"about-input\"\n              className=\"popup__item\"\n              type=\"text\"\n              required\n              placeholder=\"Расскажите о себе\"\n              name=\"about\"\n              minLength={\"2\"}\n              maxLength={\"200\"}\n            />\n          </>\n        }\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        textOnButton={\"Сохранить\"}\n      />\n      <PopupWithForm\n        title={\"Новое место\"}\n        name={\"add-card\"}\n        children={\n          <>\n            <input\n              id=\"name-input\"\n              className=\"popup__item\"\n              type=\"text\"\n              required\n              placeholder=\"Название\"\n              name=\"name\"\n              minLength={\"1\"}\n              maxLength={\"30\"}\n            />\n            <input\n              id=\"link-input\"\n              className=\"popup__item\"\n              type=\"url\"\n              required\n              placeholder=\"Ссылка на картинку\"\n              name=\"link\"\n            />\n          </>\n        }\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        textOnButton={\"Создать\"}\n      />\n      <PopupWithForm\n        title={\"Обновить аватар\"}\n        name={\"update-avatar\"}\n        children={\n          <input\n            id=\"avatar-input\"\n            className=\"popup__item\"\n            type=\"url\"\n            placeholder=\"ссылка на аватар\"\n            name=\"avatar\"\n          />\n        }\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        textOnButton={\"Сохранить\"}\n      />\n      <ImagePopup\n        card={selectedCard}\n        isOpen={isImagePopupOpen}\n        onClose={closeAllPopups}\n      />\n      <PopupWithForm\n        title={\"Вы уверены\"}\n        name={\"confirm\"}\n        isOpen={isConfirmPopupOpen}\n        onClose={closeAllPopups}\n        textOnButton={\"Да\"}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}